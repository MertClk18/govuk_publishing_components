<%
  add_gem_component_stylesheet("govspeak")

  inverse ||= false
  direction_class = "direction-#{direction}" if local_assigns.include?(:direction)
  disable_youtube_expansions = local_assigns.fetch(:disable_youtube_expansions) if local_assigns.include?(:disable_youtube_expansions)

  data_attributes ||= {}
  disable_ga4 ||= false

  component_helper = GovukPublishingComponents::Presenters::ComponentWrapperHelper.new(local_assigns)
  component_helper.add_class("gem-c-govspeak govuk-govspeak")
  component_helper.add_class(direction_class) if direction_class
  component_helper.add_class("disable_youtube") if disable_youtube_expansions
  component_helper.add_class("gem-c-govspeak--inverse") if inverse
  component_helper.add_data_attribute({ module: "govspeak" })

  unless disable_ga4
    ga4_link = {
      event_name: "navigation",
      type: "callout",
    }

    component_helper.add_data_attribute({ module: "ga4-link-tracker" })
    component_helper.add_data_attribute({ ga4_track_links_only: "" })
    component_helper.add_data_attribute({ ga4_limit_to_element_class: "call-to-action, info-notice, help-notice, advisory" })
    component_helper.add_data_attribute({ ga4_link: ga4_link  })
  end
%>

<%= tag.div(**component_helper.all_attributes) do %>
  <% if local_assigns.include?(:content) %>
    <% if content.html_safe? %>
      <%= content %>
    <% else %>
      <% raise "
        You've passed in unsanitised HTML into the Govspeak component as the
        `content` parameter.

        To fix this use a `do` block with the sanitize method - see
        https://components.publishing.service.gov.uk/component-guide/govspeak/
        for the updated documentation and
        https://github.com/alphagov/govuk_publishing_components/pull/1632/
        for further examples.

        Called from #{caller_locations.find { |l| l.to_s.include?('.erb') }}
        " %>
    <% end %>
  <% elsif block_given? %>
    <%= yield %>
  <% end %>
<% end %>
